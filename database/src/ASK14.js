// the code is for Abrahamson, Silva, and Kamai Ground Motion Model.
// it is coded by Pengfei Wang at UCLA on 7/28/2016. 
// 
// Variable
//m: Magnitude, moment magnitude
//T: array of interested periods, sec. 0 for PGA, -1 for PGV
//Rrup: closest distance to the rupture plane, km
//Rjb: Joyner-Boore distance, km
//Rx: horizontal distance from top of rupture, km
//Ry0: horizontal distance off the end of the rupture measured oarallel to strike
//depth: depth of top of fault; -999, if unknown, km
//dip: dip angle, deg
//lambda: Rake angle, deg
//fas: flag for aftershocks; 1 for aftershocks, 0 for not
//HW: flag for hinging wall
//width: the down-dip rupture width; -999, if unknown, km
//Z10: basin depth, km; -999, if unknown
//Vs30: average velocity for upper 30m soil layer, m/s
//FVS30: measurement method effects on Vs30; 1 for inferred from geology, 0 for measured
//region: California, Japan, China, Turkey, Italy, and Global (incl. Taiwan)
//
//
//Output: PGA, PSA in g unit, PGV in cm/s

// Note: The input of T should be a vector, like [...], otherwise there will be some errors. 
// eg. ASK14(6,[-1,0,0.01],20,15,15,-999,10,45,30,1,1,5,-999,350,1,'Japan');

function ASK14(m,T,Rrup,Rjb,Rx,Ry0,depth,dip,lambda,fas,HW,width,Z10,Vs30,FVS30,region){
    
    var period = [0.01,0.02,0.03,0.05,0.075,0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.75,1,1.5,2,3,4,5,6,7.5,10,0,-1];
    var frv = lambda >= 30 & lambda <= 150; // 1 for reverse fault (30~150); otherwise, 0
    var fnm = lambda >= -120 & lambda <= -60; // 1 for normal fault (-120~-60); otherwise, 0
    if(depth == -999){
        if(frv == 1){
            depth = Math.pow(Math.max(2.704-1.226*Math.max(m-5.849,0),0),2);
        } else{
            depth = Math.pow(Math.max(2.673-1.136*Math.max(m-4.970,0),0),2);
        }
    }
    if(width == -999){
        width = Math.min(18/Math.sin(dip/180*Math.PI), Math.pow(10, -1.75+0.45*m));
    }
    if(Z10 == -999){
        if(region == 'Japan'){
            Z10 = Math.exp(-5.23/2*Math.log((Math.pow(Vs30,2) + Math.pow(412,2))/(Math.pow(1360,2) + Math.pow(412,2))))/1000;
        }else{
            Z10 = Math.exp(-7.67/4*Math.log((Math.pow(Vs30,4) + Math.pow(610,4))/(Math.pow(1360,4) + Math.pow(610,4))))/1000;
        }
    }
      
    // get the index of interested periods
    var idx_t = new Array();
    for (var i=0; i<T.length; i++){
        idx_t[i] = period.indexOf(T[i]); 
    }
    // define output vectors: PSA and sigma
    var PSA_out = new Array();
    var sigma_out = new Array();
    

    // compute PSA
    for(i=0; i<T.length; i++){        
        ip_t = idx_t[i];
        var PSA_temp = ASK14_sub(m,ip_t,Rrup,Rjb,Rx,Ry0,depth,dip,frv,fnm,fas,HW,width,Z10,Vs30,FVS30,region);
        PSA_out[i] = PSA_temp;
    }
    return PSA_out;
}

function ASK14_sub(m,ip_t,Rrup,Rjb,Rx,Ry0,depth,dip,Frv,Fnm,fas,HW,width,Z10,Vs30,FVS30,region){
    
    // the coefficients
    var M2 = 5;
    var CRjb = 999.9;
    var T = [0.01,0.02,0.03,0.05,0.075,0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.75,1,1.5,2,3,4,5,6,7.5,10,0,-1];
    var Vlin =[660.0000,680.0000,770.0000,915.0000,960.0000,910.0000,740.0000,590.0000,495.0000,430.0000,360.0000,340.0000,330.0000,330.0000,330.0000,330.0000,330.0000,330.0000,330.0000,330.0000,330.0000,330.0000,660.0000,330.0000];
    var b	=[-1.4700,-1.4590,-1.3900,-1.2190,-1.1520,-1.2300,-1.5870,-2.0120,-2.4110,-2.7570,-3.2780,-3.5990,-3.8000,-3.5000,-2.4000,-1.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,-1.4700,-2.0200];
    var n	=[1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000,1.5000];
    var M1	=[6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.7500,6.8200,6.9200,7.0000,7.0600,7.1450,7.2500,6.7500,6.7500];
    var c	=[2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2.4000,2400.0000];
    var c4	=[4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000,4.5000];
    var a1	=[0.5870,0.5980,0.6020,0.7070,0.9730,1.1690,1.4420,1.6370,1.7010,1.7120,1.6620,1.5710,1.2990,1.0430,0.6650,0.3290,-0.0600,-0.2990,-0.5620,-0.8750,-1.3030,-1.9280,0.5870,5.9750];
    var a2	=[-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7900,-0.7650,-0.7110,-0.6340,-0.5290,-0.7900,-0.9190];
    var a3	=[0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750,0.2750];
    var a4	=[-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000];
    var a5	=[-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100,-0.4100];
    var a6	=[2.1541,2.1461,2.1566,2.0845,2.0285,2.0408,2.1208,2.2241,2.3124,2.3383,2.4688,2.5586,2.6821,2.7630,2.8355,2.8973,2.9061,2.8888,2.8984,2.8955,2.8700,2.8431,2.1541,2.3657];
    var a7	=[0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000];
    var a8	=[-0.0150,-0.0150,-0.0150,-0.0150,-0.0150,-0.0150,-0.0220,-0.0300,-0.0380,-0.0450,-0.0550,-0.0650,-0.0950,-0.1100,-0.1240,-0.1380,-0.1720,-0.1970,-0.2180,-0.2350,-0.2550,-0.2850,-0.0150,-0.0940];
    var a10	=[1.7350,1.7180,1.6150,1.3580,1.2580,1.3100,1.6600,2.2200,2.7700,3.2500,3.9900,4.4500,4.7500,4.3000,2.6000,0.5500,-0.9500,-0.9500,-0.9300,-0.9100,-0.8700,-0.8000,1.7350,2.3600];
    var a11	=[0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000];
    var a12	=[-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.1000,-0.2000,-0.2000,-0.2000,-0.1000,-0.1000];
    var a13	=[0.6000,0.6000,0.6000,0.6000,0.6000,0.6000,0.6000,0.6000,0.6000,0.6000,0.5800,0.5600,0.5300,0.5000,0.4200,0.3500,0.2000,0.0000,0.0000,0.0000,0.0000,0.0000,0.6000,0.2500];
    var a14	=[-0.3000,-0.3000,-0.3000,-0.3000,-0.3000,-0.3000,-0.3000,-0.3000,-0.2400,-0.1900,-0.1100,-0.0400,0.0700,0.1500,0.2700,0.3500,0.4600,0.5400,0.6100,0.6500,0.7200,0.8000,-0.3000,0.2200];
    var a15	=[1.1000,1.1000,1.1000,1.1000,1.1000,1.1000,1.1000,1.1000,1.1000,1.0300,0.9200,0.8400,0.6800,0.5700,0.4200,0.3100,0.1600,0.0500,-0.0400,-0.1100,-0.1900,-0.3000,1.1000,0.3000];
    var a17	=[-0.0072,-0.0073,-0.0075,-0.0080,-0.0089,-0.0095,-0.0095,-0.0086,-0.0074,-0.0064,-0.0043,-0.0032,-0.0025,-0.0025,-0.0022,-0.0019,-0.0015,-0.0010,-0.0010,-0.0010,-0.0010,-0.0010,-0.0072,-0.0005];
    var a43	=[0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1000,0.1400,0.1700,0.2200,0.2600,0.3400,0.4100,0.5100,0.5500,0.4900,0.4200,0.1000,0.2800];
    var a44	=[0.0500,0.0500,0.0500,0.0500,0.0500,0.0500,0.0500,0.0500,0.0500,0.0500,0.0700,0.1000,0.1400,0.1700,0.2100,0.2500,0.3000,0.3200,0.3200,0.3200,0.2750,0.2200,0.0500,0.1500];
    var a45 =[0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0300,0.0600,0.1000,0.1400,0.1700,0.2000,0.2200,0.2300,0.2300,0.2200,0.2000,0.1700,0.1400,0.0000,0.0900];
    var a46	=[-0.0500,-0.0500,-0.0500,-0.0500,-0.0500,-0.0500,-0.0500,-0.0300,0.0000,0.0300,0.0600,0.0900,0.1300,0.1400,0.1600,0.1600,0.1600,0.1400,0.1300,0.1000,0.0900,0.0800,-0.0500,0.0700];
    var a25	=[-0.0015,-0.0015,-0.0016,-0.0020,-0.0027,-0.0033,-0.0035,-0.0033,-0.0029,-0.0027,-0.0023,-0.0020,-0.0010,-0.0005,-0.0004,-0.0002,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,-0.0015,-0.0001];
    var a28	=[0.0025,0.0024,0.0023,0.0027,0.0032,0.0036,0.0033,0.0027,0.0024,0.0020,0.0010,0.0008,0.0007,0.0007,0.0006,0.0003,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0025,0.0005];
    var a29	=[-0.0034,-0.0033,-0.0034,-0.0033,-0.0029,-0.0025,-0.0025,-0.0031,-0.0036,-0.0039,-0.0048,-0.0050,-0.0041,-0.0032,-0.0020,-0.0017,-0.0020,-0.0020,-0.0020,-0.0020,-0.0020,-0.0020,-0.0034,-0.0037];
    var a31	=[-0.1503,-0.1479,-0.1447,-0.1326,-0.1353,-0.1128,0.0383,0.0775,0.0741,0.2548,0.2136,0.1542,0.0787,0.0476,-0.0163,-0.1203,-0.2719,-0.2958,-0.2718,-0.2517,-0.1400,-0.0216,-0.1503,-0.1462];
    var a36	=[0.2650,0.2550,0.2490,0.2020,0.1260,0.0220,-0.1360,-0.0780,0.0370,-0.0910,0.1290,0.3100,0.5050,0.3580,0.1310,0.1230,0.1090,0.1350,0.1890,0.2150,0.1500,0.0920,0.2650,0.3770];
    var a37	=[0.3370,0.3280,0.3200,0.2890,0.2750,0.2560,0.1620,0.2240,0.2480,0.2030,0.2320,0.2520,0.2080,0.2080,0.1080,0.0680,-0.0230,0.0280,0.0310,0.0240,-0.0700,-0.1590,0.3370,0.2120];
    var a38	=[0.1880,0.1840,0.1800,0.1670,0.1730,0.1890,0.1080,0.1150,0.1220,0.0960,0.1230,0.1340,0.1290,0.1520,0.1180,0.1190,0.0930,0.0840,0.0580,0.0650,0.0000,-0.0500,0.1880,0.1570];
    var a39	=[0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000];
    var a40	=[0.0880,0.0880,0.0930,0.1330,0.1860,0.1600,0.0680,0.0480,0.0550,0.0730,0.1430,0.1600,0.1580,0.1450,0.1310,0.0830,0.0700,0.1010,0.0950,0.1330,0.1510,0.1240,0.0880,0.0950];
    var a41	=[-0.1960,-0.1940,-0.1750,-0.0900,0.0900,0.0060,-0.1560,-0.2740,-0.2480,-0.2030,-0.1540,-0.1590,-0.1410,-0.1440,-0.1260,-0.0750,-0.0210,0.0720,0.2050,0.2850,0.3290,0.3010,-0.1960,-0.0380];
    var a42	=[0.0440,0.0610,0.1620,0.4510,0.5060,0.3350,-0.0840,-0.1780,-0.1870,-0.1590,-0.0230,-0.0290,0.0610,0.0620,0.0370,-0.1430,-0.0280,-0.0970,0.0150,0.1040,0.2990,0.2430,0.0440,0.0650];
    var s1	=[0.7540,0.7600,0.7810,0.8100,0.8100,0.8100,0.8010,0.7890,0.7700,0.7400,0.6990,0.6760,0.6310,0.6090,0.5780,0.5550,0.5480,0.5270,0.5050,0.4770,0.4570,0.4290,0.7540,0.6620];
    var s2	=[0.5200,0.5200,0.5200,0.5300,0.5400,0.5500,0.5600,0.5650,0.5700,0.5800,0.5900,0.6000,0.6150,0.6300,0.6400,0.6500,0.6400,0.6300,0.6300,0.6300,0.6300,0.6300,0.5200,0.5100];
    var s3	=[0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.4700,0.3800];
    var s4	=[0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3800];
    var s1_m =[0.7410,0.7470,0.7690,0.7980,0.7980,0.7950,0.7730,0.7530,0.7290,0.6930,0.6440,0.6160,0.5660,0.5410,0.5060,0.4800,0.4720,0.4470,0.4250,0.3950,0.3780,0.3590,0.7410,0.6600];
    var s2_m =[0.5010,0.5010,0.5010,0.5120,0.5220,0.5270,0.5190,0.5140,0.5130,0.5190,0.5240,0.5320,0.5480,0.5650,0.5760,0.5870,0.5760,0.5650,0.5680,0.5710,0.5750,0.5850,0.5010,0.5100];
    var s5_JP=[0.5400,0.5400,0.5500,0.5600,0.5700,0.5700,0.5800,0.5900,0.6100,0.6300,0.6600,0.6900,0.7300,0.7700,0.8000,0.8000,0.8000,0.7600,0.7200,0.7000,0.6700,0.6400,0.5400,0.5800];
    var s6_JP=[0.6300,0.6300,0.6300,0.6500,0.6900,0.7000,0.7000,0.7000,0.7000,0.7000,0.7000,0.7000,0.6900,0.6800,0.6600,0.6200,0.5500,0.5200,0.5000,0.5000,0.5000,0.5000,0.6300,0.5300];

    ////////////////// term f1 
    if(m > 5){
        var c4m = c4[ip_t];
    } else if(m > 4 & m <= 5){
        var c4m = c4[ip_t] - (c4[ip_t] - 1)*(5 - m);
    } else{
        var c4m = 1;
    }
    var R = Math.sqrt(Math.pow(Rrup, 2) + Math.pow(c4m, 2));
    if(m > M1[ip_t]){
        var f1 = a1[ip_t] + a5[ip_t]*(m - M1[ip_t]) + a8[ip_t]*Math.pow(8.5 - m, 2) + (a2[ip_t] + a3[ip_t]*(m - M1[ip_t]))*Math.log(R) + a17[ip_t]*Rrup;
    } else if(m >= M2 & m <= M1[ip_t]){
        var f1 = a1[ip_t] + a4[ip_t]*(m - M1[ip_t]) + a8[ip_t]*Math.pow(8.5 - m, 2) + (a2[ip_t] + a3[ip_t]*(m - M1[ip_t]))*Math.log(R) + a17[ip_t]*Rrup;
    } else{
        var f1 = a1[ip_t] + a4[ip_t]*(M2 - M1[ip_t]) + a8[ip_t]*Math.pow(8.5 - M2, 2) + a6[ip_t]*(m - M2) + a7[ip_t]*Math.pow(m - M2, 2) + (a2[ip_t] + a3[ip_t]*(M2 - M1[ip_t]))*Math.log(R) + a17[ip_t]*Rrup;
    }
    /////////////////// term f4 -- Hanging wall 
    var R1 = width*Math.cos(dip/180*Math.PI);
    var R2 = 3*R1;
    var Ry1 = Rx*Math.tan(20/180*Math.PI);
    var h1 = 0.25;
    var h2 = 1.5;
    var h3 = -0.75;
    
    if(dip > 30){
        var T1 = (90 - dip) / 45;
    } else{
        var T1 = 60/45;
    }
    var a2hw = 0.2;
    if(m > 6.5){
        var T2 = 1 + a2hw*(m - 6.5);
    } else if(m > 5.5){
        var T2 = 1 + a2hw*(m - 6.5) - (1 - a2hw)*Math.pow(m - 6.5, 2);
    } else{
        var T2 = 0;
    }
    if(Rx <= R1){
        var T3 = h1 + h2*(Rx/R1) + h3*Math.pow(Rx/R1,2);
    } else if(Rx < R2){
        var T3 = 1 - (Rx - R1)/(R2 - R1);
    } else{
        var T3 = 0;
    }
    if(depth < 10){
        var T4 = 1 - Math.pow(depth,2)/100;
    } else{
        var T4 = 0;
    }
    if(Ry0 == -999 | Ry0 == 0){
        if(Rjb == 0){
            var T5 = 1;
        } else if(Rjb < 30){
            var T5 = 1 - Rjb/30;
        } else{
            var T5 = 0;
        }
    } else{
        if(Ry0 - Ry1 <= 0){
            var T5 = 1;
        } else if(Ry0 - Ry1 < 5){
            var T5 = 1 - (Ry0 - Ry1)/5;
        } else{
            var T5 = 0;
        }
    }
    if(HW == 1){
        var f4 = a13[ip_t]*T1*T2*T3*T4*T5;
    } else{
        var f4 = 0;
    }
    
    ////////////////// Term f6 -- depth
    if(depth < 20){
        var f6 = a15[ip_t]*depth/20;
    } else{
        var f6 = a15[ip_t];
    }
    
    ////////////////// Term f7 and f8 -- Fault type
    if(m > 5){
        var f7 = a11[ip_t];
        var f8 = a12[ip_t];
    } else if(m >= 4 & m <= 5){
        var f7 = a11[ip_t]*(m - 4);
        var f8 = a12[ip_t]*(m - 4);
    } else{
        var f7 = 0;
        var f8 = 0;
    }
    if(T[ip_t] <= 0.5){
        var V1 = 1500;
    } else if(T[ip_t] < 3){
        var V1 = Math.exp(-0.35*Math.log(T[ip_t]/0.5) + Math.log(1500));
    } else{
        var V1 = 800;
    }
    if(Vs30 < V1){
        var Vs30s = Vs30;
    } else{
        var Vs30s = V1;
    }
    if(V1 <= 1180){
        var Vs30star1180 = V1;
    } else{
        var Vs30star1180 = 1180;
    }
    
    //////////////// term region
    var Ftw = (region == 'Taiwan');
    var Fcn = (region == 'China');
    var Fjp = (region == 'Japan');
    // Japan
    if(Vs30 < 150){
        var y1 = a36[ip_t];
        var y2 = a36[ip_t];
        var x1 = 50;
        var x2 = 150;
    } else if(Vs30 < 250){
        var y1 = a36[ip_t];
        var y2 = a37[ip_t];
        var x1 = 150;
        var x2 = 250;
    } else if(Vs30 < 350){
        var y1 = a37[ip_t];
        var y2 = a38[ip_t];
        var x1 = 250;
        var x2 = 350;
    } else if(Vs30 < 450){
        var y1 = a38[ip_t];
        var y2 = a39[ip_t];
        var x1 = 350;
        var x2 = 450;
    } else if(Vs30 < 600){
        var y1 = a39[ip_t];
        var y2 = a40[ip_t];
        var x1 = 450;
        var x2 = 600;
    } else if(Vs30 < 850){
        var y1 = a40[ip_t];
        var y2 = a41[ip_t];
        var x1 = 600;
        var x2 = 850;
    } else if(Vs30 < 1150){
        var y1 = a41[ip_t];
        var y2 = a42[ip_t];
        var x1 = 850;
        var x2 = 1150;
    } else{
        var y1 = a42[ip_t];
        var y2 = a42[ip_t];
        var x1 = 1150;
        var x2 = 3000;
    }
    var f13Vs30 = y1 + (y2 - y1)/(x2 - x1)*(Vs30 - x1);
    
    // Taiwan
    var f12Vs30 = a31[ip_t]*Math.log(Vs30s/Vlin[ip_t]);
    var f12Vs30_1180 = a31[ip_t]*Math.log(Vs30star1180/Vlin[ip_t]);
    
    var Regional = Ftw*(f12Vs30 + a25[ip_t]*Rrup) + Fcn*(a28[ip_t]*Rrup) + Fjp*(f13Vs30 + a29[ip_t]*Rrup);
    var Regional_1180 = Ftw*(f12Vs30_1180 + a25[ip_t]*Rrup) + Fcn*(a28[ip_t]*Rrup) + Fjp*(f13Vs30 + a29[ip_t]*Rrup);
    
    ///////////////// Term f5 -- site response 
    
    var f5_1180 = (a10[ip_t] + b[ip_t]*n[ip_t])*Math.log(Vs30star1180/Vlin[ip_t]);
    var Sa1180 = Math.exp(f1 + f6 + Frv*f7 + Fnm*f8 + HW*f4 + f5_1180 + Regional_1180);
    if(Vs30 >= Vlin[ip_t]){
        var f5 = (a10[ip_t] + b[ip_t]*n[ip_t])*Math.log(Vs30/Vlin[ip_t]);
    } else{
        var f5 = a10[ip_t]*Math.log(Vs30/Vlin[ip_t]) - b[ip_t]*Math.log(Sa1180 + c[ip_t]) + b[ip_t]*Math.log(Sa1180 + c[ip_t]*Math.pow(Vs30/Vlin[ip_t], n[ip_t]));
    }
    
    ////////////////// Term f10 -- soil depth
    
    if(region != 'Japan'){
        var Z1ref = 1/1000*Math.exp(-7.67/4*Math.log((Math.pow(Vs30, 4) + Math.pow(610, 4))/(Math.pow(1360, 4) + Math.pow(610, 4))));
    } else{
        var Z1ref = 1/1000*Math.exp(-5.23/2*Math.log((Math.pow(Vs30, 2) + Math.pow(412,2))/(Math.pow(1360, 2) + Math.pow(412, 2))));
    }
    if(Vs30 <= 150){
        var y1z = a43[ip_t];
        var y2z = a43[ip_t];
        var x1z = 50;
        var x2z = 150;
    } else if(Vs30 <= 250){
        var y1z = a43[ip_t];
        var y2z = a44[ip_t];
        var x1z = 150;
        var x2z = 250;
    } else if(Vs30 <= 400){
        var y1z = a44[ip_t];
        var y2z = a45[ip_t];
        var x1z = 250;
        var x2z = 400;
    } else if(Vs30 <= 700){
        var y1z = a45[ip_t];
        var y2z = a46[ip_t];
        var x1z = 400;
        var x2z = 700;
    } else{
        var y1z = a46[ip_t];
        var y2z = a46[ip_t];
        var x1z = 700;
        var x2z = 1000;
    }
    
    // f10 term is 0 when Vs30 = 1180m/s
    var f10 = (y1z + (Vs30 - x1z)*(y2z - y1z)/(x2z - x1z))*Math.log((Z10 + 0.01)/(Z1ref + 0.01));
   
    ////////////////// term f11 -- Aftershock effect
    if(CRjb <= 5){
        var f11 = a14[ip_t];
    } else if(CRjb < 15){
        var f11 = a14[ip_t]*(1 - (CRjb - 5)/10);
    } else{
        var f11 = 0;
    }
    if(fas == 0){
        var f11 = 0;
    }
    
    ////////////////// compute PSA
    var PSA_temp = f1 + f6 + Frv*f7 + Fnm*f8 + HW*f4 + fas*f11 + f5 + f10 + Regional;
    console.log([f1,f4,f5,f6,f7,f8,f10,f11,Regional]);
    var PSA = Math.exp(PSA_temp);
    
    
    ////////////////// Standard Deviation
    if(FVS30 == 1){
        s1 = s1_m;
        s2 = s2_m;
    }
    if(m < 4){
        var phi_AL = s1[ip_t];
    } else if(m <= 6){
        var phi_AL = s1[ip_t] + (s2[ip_t] - s1[ip_t])/2*(m - 4);
    } else{
        var phi_AL = s2[ip_t];
    }
    if(m < 5){
        var tau_AL = s3[ip_t];
    } else if(m <= 7){
        var tau_AL = s3[ip_t] + (s4[ip_t] - s3[ip_t])/2*(m - 5);
    } else{
        var tau_AL = s4[ip_t];
    }
    var tau_B = tau_AL;
    if(Fjp == 1){
        if(Rrup < 30){
            phi_AL = s5_JP[ip_t];
        } else if(Rrup <= 80){
            phi_AL = s5_JP[ip_t] + (s6_JP[ip_t] - s5_JP[ip_t])/50*(Rrup - 30);
        } else{
            phi_AL = s6_JP[ip_t];
        }
    }
    var phi_amp = 0.4;
    var phi_B = Math.sqrt(Math.pow(phi_AL, 2) - Math.pow(phi_amp, 2));
    if(Vs30 >= Vlin[ip_t]){
        var dln = 0;
    } else{
        var dln = -b[ip_t]*Sa1180/(Sa1180 + c[ip_t]) + b[ip_t]*Sa1180/(Sa1180 + c[ip_t]*Math.pow(Vs30/Vlin[ip_t], n[ip_t]));
    }
    var phi = Math.sqrt(Math.pow(phi_B, 2)*Math.pow(1 + dln, 2) + Math.pow(phi_amp, 2));
    var tau = tau_B*(1 + dln);
    
    var sigma = Math.sqrt(Math.pow(phi, 2) + Math.pow(tau, 2));
    
    ////////////////// Return result
    
    return PSA;

    
}








































