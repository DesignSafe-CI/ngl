// the code is for Boore, Stewart, Seyhan, Atkinson Ground Motion Model.
// it is coded by Pengfei Wang at UCLA on 7/26/2016. 
// 
// Variable
//m: Magnitude, moment magnitude
//Rjb: Rjb distance, km
//Vs30: average velocity for upper 30m soil layer, m/s
//z1: depth of basin, km
//region: California, Japan, China or Turkey, Italy, and Global (incl. Taiwan)
//Fault_Type: nor--unspecified fault; ss--strike-slip fault; ns--normal fault; rev--reverse fault
//T: array of interested periods, sec. 0 for PGA, -1 for PGV
//
//Output: PGA, PSA in g unit, PGV in cm/s

// Note: The input of T should be a vector, like [...], otherwise there will be some errors. 
// eg. BSSA14(6,[-1],15,'ss',"Japan",50,350);

///////////////// input parameters
function BSSA14(m,T,Rjb,Fault_Type,region,Z1,Vs30){
    var U = 0; // unspecified fault
    var SS = 0; // strike-slip
    var NS = 0; // normal fault
    var RS = 0; // reverse fault

    // Fault mechanism
    if(Fault_Type == 'ss'){
        SS = 1;
    } else if (Fault_Type == 'nor'){
        U = 1;
    } else if (Fault_Type == 'rev'){
        RS = 1;
    } else if (Fault_Type == 'ns') {
        NS = 1;
    }

    
    var period = [-1,0,0.010,0.020,0.030,0.050,0.075,0.10,0.15,0.20,0.25,0.30,0.40,0.50,0.75,1.0,1.5,2.0,3.0,4.0,5.0,7.5,10.0];
    var idx_t = new Array();
    for (var i=0; i<T.length; i++){
        idx_t[i] = period.indexOf(T[i]); 
    }
    var mref = 4.5; // reference magnitude
    var rref = 1; // reference value
    var v_ref = 760; // reference velocity, m/s
    
  ////////////////////////////////////////////////////////////////////////////////////  
    /// the coefficients
    var f1 = 0;
    var f3 = 0.1;
    var v1 = 225;
    var v2 = 300;
    
    var mh=[6.2,5.5,5.5,5.5,5.5,5.5,5.5,5.54,5.74,5.92,6.05,6.14,6.2,6.2,6.2,6.2,6.2,6.2,6.2,6.2,6.2,6.2,6.2];
    var e0=[5.037,0.4473,0.4534,0.48598,0.56916,0.75436,0.96447,1.1268,1.3095,1.3255,1.2766,1.2217,1.1046,0.96991,0.66903,0.3932,-0.14954,-0.58669,-1.1898,-1.6388,-1.966,-2.5865,-3.0702];
    var e1=[5.078,0.4856,0.4916,0.52359,0.6092,0.79905,1.0077,1.1669,1.3481,1.359,1.3017,1.2401,1.1214,0.99106,0.69737,0.4218,-0.11866,-0.55003,-1.142,-1.5748,-1.8882,-2.4874,-2.9537];
    var e2=[4.849,0.2459,0.2519,0.29707,0.40391,0.60652,0.77678,0.8871,1.0648,1.122,1.0828,1.0246,0.89765,0.7615,0.47523,0.207,-0.3138,-0.71466,-1.23,-1.6673,-2.0245,-2.8176,-3.3776];
    var e3=[5.033,0.4539,0.4599,0.48875,0.55783,0.72726,0.9563,1.1454,1.3324,1.3414,1.3052,1.2653,1.1552,1.012,0.69173,0.4124,-0.1437,-0.60658,-1.2664,-1.7516,-2.0928,-2.6854,-3.1726];
    var e4=[1.073,1.431,1.421,1.4331,1.4261,1.3974,1.4174,1.4293,1.2844,1.1349,1.0166,0.95676,0.96766,1.0384,1.2871,1.5004,1.7622,1.9152,2.1323,2.204,2.2299,2.1187,1.8837];
    var e5=[-0.1536,0.05053,0.04932,0.053388,0.061444,0.067357,0.073549,0.055231,-0.042065,-0.11096,-0.16213,-0.1959,-0.22608,-0.23522,-0.21591,-0.18983,-0.1467,-0.11237,-0.04332,-0.014642,-0.014855,-0.081606,-0.15096 ];
    var e6=[0.2252,-0.1662,-0.1659,-0.16561,-0.1669,-0.18082,-0.19665,-0.19838,-0.18234,-0.15852,-0.12784,-0.092855,-0.023189,0.029119,0.10829,0.17895,0.33896,0.44788,0.62694,0.76303,0.87314,1.0121,1.0651];
    var c1=[-1.24300,-1.13400,-1.13400,-1.13940,-1.14210,-1.11590,-1.08310,-1.06520,-1.05320,-1.06070,-1.07730,-1.09480,-1.12430,-1.14590,-1.17770,-1.19300,-1.20630,-1.21590,-1.21790,-1.21620,-1.21890,-1.25430,-1.32530];
    var c2=[0.14890,0.19170,0.19160,0.18962,0.18842,0.18709,0.18225,0.17203,0.15401,0.14489,0.13925,0.13388,0.12512,0.12015,0.11054,0.10248,0.09645,0.09636,0.09764,0.10218,0.10353,0.12507,0.15183];
    var c3=[-0.00344,-0.00809,-0.00809,-0.00807,-0.00834,-0.00982,-0.01058,-0.01020,-0.00898,-0.00772,-0.00652,-0.00548,-0.00405,-0.00322,-0.00193,-0.00121,-0.00037,0.00000,0.00000,-0.00005,0.00000,0.00000,0.00000];
    var h=[5.3,4.5,4.5,4.5,4.49,4.2,4.04,4.13,4.39,4.61,4.78,4.93,5.16,5.34,5.6,5.74,6.18,6.54,6.93,7.32,7.78,9.48,9.66];

    var deltac3_gloCATW=[0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000];
    var deltac3_CHTU=[0.004350,0.002860,0.002820,0.002780,0.002760,0.002960,0.002960,0.002880,0.002790,0.002610,0.002440,0.002200,0.002110,0.002350,0.002690,0.002920,0.003040,0.002920,0.002620,0.002610,0.002600,0.002600,0.003030];
    var deltac3_ITJA=[-0.000330,-0.002550,-0.002440,-0.002340,-0.002170,-0.001990,-0.002160,-0.002440,-0.002710,-0.002970,-0.003140,-0.003300,-0.003210,-0.002910,-0.002530,-0.002090,-0.001520,-0.001170,-0.001190,-0.001080,-0.000570,0.000380,0.001490];

    var c=[-0.8400,-0.6000,-0.6037,-0.5739,-0.5341,-0.4580,-0.4441,-0.4872,-0.5796,-0.6876,-0.7718,-0.8417,-0.9109,-0.9693,-1.0154,-1.0500,-1.0454,-1.0392,-1.0112,-0.9694,-0.9195,-0.7766,-0.6558];
    var vc=[1300.00,1500.00,1500.20,1500.36,1502.95,1501.42,1494.00,1479.12,1442.85,1392.61,1356.21,1308.47,1252.66,1203.91,1147.59,1109.95,1072.39,1009.49,922.43,844.48,793.13,771.01,775.00];
    var f4=[-0.1000,-0.1500,-0.1483,-0.1471,-0.1549,-0.1963,-0.2287,-0.2492,-0.2571,-0.2466,-0.2357,-0.2191,-0.1958,-0.1704,-0.1387,-0.1052,-0.0679,-0.0361,-0.0136,-0.0032,-0.0003,-0.0001,0.0000];
    var f5=[-0.00844,-0.00701,-0.00701,-0.00728,-0.00735,-0.00647,-0.00573,-0.00560,-0.00585,-0.00614,-0.00644,-0.00670,-0.00713,-0.00744,-0.00812,-0.00844,-0.00771,-0.00479,-0.00183,-0.00152,-0.00144,-0.00137,-0.00136];
    var f6=[-9.900,-9.900,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,0.092,0.367,0.638,0.871,1.135,1.271,1.329,1.329,1.183];
    var f7=[-9.900,-9.900,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,-9.9,0.059,0.208,0.309,0.382,0.516,0.629,0.738,0.809,0.703];
    var tau1=[0.4010,0.3980,0.4020,0.4090,0.4450,0.5030,0.4740,0.4150,0.3540,0.3440,0.3500,0.3630,0.3810,0.4100,0.4570,0.4980,0.5250,0.5320,0.5370,0.5430,0.5320,0.5110,0.4870];
    var tau2=[0.3460,0.3480,0.3450,0.3460,0.3640,0.4260,0.4660,0.4580,0.3880,0.3090,0.2660,0.2290,0.2100,0.2240,0.2660,0.2980,0.3150,0.3290,0.3440,0.3490,0.3350,0.2700,0.2390];
    var phi1=[0.6440,0.6950,0.6980,0.7020,0.7210,0.7530,0.7450,0.7280,0.7200,0.7110,0.6980,0.6750,0.6430,0.6150,0.5810,0.5530,0.5320,0.5260,0.5340,0.5360,0.5280,0.5120,0.5100];
    var phi2=[0.5520,0.4950,0.4990,0.5020,0.5140,0.5320,0.5420,0.5410,0.5370,0.5390,0.5470,0.5610,0.5800,0.5990,0.6220,0.6250,0.6190,0.6180,0.6190,0.6160,0.6220,0.6340,0.6040];
    var dphiR=[0.082,0.100,0.096,0.092,0.081,0.063,0.064,0.087,0.120,0.136,0.141,0.138,0.122,0.109,0.100,0.098,0.104,0.105,0.088,0.070,0.061,0.058,0.060];
    var dphiV=[0.080,0.070,0.070,0.030,0.029,0.030,0.022,0.014,0.015,0.045,0.055,0.050,0.049,0.060,0.070,0.020,0.010,0.008,0.000,0.000,0.000,0.000,0.000];
    var R1=[105.000,110.000,111.670,113.100,112.130,97.930,85.990,79.590,81.330,90.910,97.040,103.150,106.020,105.540,108.390,116.390,125.380,130.370,130.360,129.490,130.220,130.720,130.000];
    var R2=[272.000,270.000,270.000,270.000,270.000,270.000,270.040,270.090,270.160,270.000,269.450,268.590,266.540,265.000,266.510,270.000,262.410,240.140,195.000,199.450,230.000,250.390,210.000];

    //////////////////////////////////////////////////////////////////////////////////// 
   
    if(region == "China" | region == "Turkey"){
        var deltac3 = deltac3_CHTU; 
    } else if(region == "Japan" | region == "Italy"){
        var deltac3 = deltac3_ITJA;
    } else {
        var deltac3 = deltac3_gloCATW;
    }


    ///////////////// Source Term

    function F_E(m,mh,e0,e1,e2,e3,e4,e5,e6,U,SS,NS,RS) {
        if (m <= mh) {
            var fe = e0*U + e1*SS + e2*NS + e3*RS + e4*(m-mh) + e5*Math.pow((m-mh),2);
        } else {
            var fe = e0*U + e1*SS + e2*NS + e3*RS + e6*(m-mh);
        }
        return fe;
    }

    ///////////////// Path Term

    function F_P(m,deltac3,c1,c2,c3,mref,rref,h,Rjb) {
        var r = Math.sqrt(Math.pow(Rjb,2) + Math.pow(h,2));
        var fp = (c1 + c2*(m-mref))*Math.log(r/rref) + (c3 + deltac3)*(r-rref);
        return fp;
    }

    ///////////////// Site Term

    function F_S(Vs30,vc,c,v_ref,f1,f3,f4,f5,f6,f7,PGA_r,Z1,period) {
        // Linear component
        if (Vs30 <= vc){
            var ln_Flin = c*Math.log(Vs30/v_ref);
        } else {
            var ln_flin = c*Math.log(vc/v_ref);
        }
        // Nonlinear component
        var f2 = f4*(Math.exp(f5*(Math.min(Vs30,760)-360)) - Math.exp(f5*(760-360)));
        
        var ln_Fnlin = f1 + f2*Math.log((PGA_r + f3)/f3);
        
        // Effects of basin depth  
        // Global area uses the same equation as California
        if (Z1 != -999){
            if (region == "California"){
                var mu_z1 = Math.log(-7.15/4*Math.log((Math.pow(Vs30,4) + Math.pow(570.94,4))/(Math.pow(1360,4)) + Math.pow(570.94,4)) - Math.log(1000));
            } else if(region == "Japan"){
                var mu_z1 = Math.log(-5.23/2*Math.log((Math.pow(Vs30,2) + Math.pow(412.39,2))/(Math.pow(1360,2)) + Math.pow(412.39,2)) - Math.log(1000));
            } else {
                var mu_z1 = Math.log(-7.15/4*Math.log((Math.pow(Vs30,4) + Math.pow(570.94,4))/(Math.pow(1360,4)) + Math.pow(570.94,4)) - Math.log(1000));
            }
            var dz1 = Z1 - mu_z1;
        } else {
            var dz1 = 0;
        }
        if (Z1 != -999) {
            if(period < 0.65){
                var F_dz1 = 0;
            } else if(period >= 0.65 && Math.abs(dz1) <= f7/f6) {
                var F_dz1 = f6*dz1;
            } else {
                var F_dz1 = f7;
            }
        } else {
            var F_dz1 = 0;
        }
        var fs = ln_Flin + ln_Fnlin + F_dz1;
        return fs;
    }
    
    ////////////////// PGA_r
    ip_t = 1;
    var PGA_rtemp = F_E(m,mh[ip_t],e0[ip_t],e1[ip_t],e2[ip_t],e3[ip_t],e4[ip_t],e5[ip_t],e6[ip_t],U,SS,NS,RS) + F_P(m,deltac3[ip_t],c1[ip_t],c2[ip_t],c3[ip_t],mref,rref,h[ip_t],Rjb)
    PGA_r = Math.exp(PGA_rtemp);

    ///////////////// Final Predicated Ground Motion for target periods
    var PSA_out = new Array();
    var sigma_out = new Array();
    
    for(i=0; i<T.length; i++){        
        ip_t = idx_t[i];
        if(Vs30 != v_ref | ip_t != 1){
            var PSA_temp = F_E(m,mh[ip_t],e0[ip_t],e1[ip_t],e2[ip_t],e3[ip_t],e4[ip_t],e5[ip_t],e6[ip_t],U,SS,NS,RS) + F_P(m,deltac3[ip_t],c1[ip_t],c2[ip_t],c3[ip_t],mref,rref,h[ip_t],Rjb) + F_S(Vs30,vc[ip_t],c[ip_t],v_ref,f1,f3,f4[ip_t],f5[ip_t],f6[ip_t],f7[ip_t],PGA_r,Z1,period[ip_t]); 
            var PSA = Math.exp(PSA_temp);
            PSA_out[i] = PSA;
        } else{
            PSA_out[i] = PGA_r;
        }
        
        /////////////////////// standard deviation calculation /////////////////////////////////////////
        if(m<=4.5){
            var tau = tau1[ip_t];
            var phi_M = phi1[ip_t];
        } else if(m<5.5){
            var tau = tau1[ip_t] + (tau2[ip_t] - tau1[ip_t])*(m-4.5);
            var phi_M = phi1[ip_t] + (phi2[ip_t] - phi1[ip_t])*(m-4.5);
        } else{
            var tau = tau2[ip_t];
            var phi_M = phi2[ip_t];
        }
        if(Rjb <= R1[ip_t]){
            var phi_MR = phi_M;
        } else if(R1[ip_t] < Rjb && Rjb <= R2[ip_t]){
            var phi_MR = phi_M + dphiR[ip_t]*(Math.log(Rjb/R1[ip_t])/Math.log(R2[ip_t]/R1[ip_t]));
        } else {
            var phi_MR = phi_M + dphiR[ip_t];
        }
        if(Vs30 >= v2){
            var phi_MRV = phi_MR;
        } else if(v1 <= Vs30 && Vs30 <= v2) {
            var phi_MRV = phi_MR - dphiV[ip_t]*(Math.log(v2/Vs30)/Math.log(v2/v1))
        } else {
            var phi_MRV = phi_MR - dphiV[ip_t];
        }
        var sigma = Math.sqrt(Math.pow(tau,2) + Math.pow(phi_MRV,2));
        sigma_out[i] = sigma;
        
        ////////////////////////// end SD calculation  ///////////////////////////////////////////////////////
        
    }
    return PSA_out;
}
